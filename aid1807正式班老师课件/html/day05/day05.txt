1. 外边距

	1. 外边距使用注意 ：
		1. 垂直方向上的外边距，会发生合并，取较大的值
		2. 水平方向上的外边距，会发生叠加，元素之间的距离较大
		3. 为子元素添加距上的外边距，作用于父元素上 ：
				解决 ：
					1. 为父元素设置上边框（可以使用透明色）
					2. 为父元素天机顶部的内边距padding-top:0.1px;
2. 内边距
	1. 元素内容与元素边框之间的距离，称为内边距
	2. 属性 : padding
		 取值 : 像素值或百分比
				1. padding:10px; 
						设置上右下左四个方向的内边距
				2. padding:10px 20px;
						设置上下内边距为10，左右内边距为20
				3. padding:10px 20px 30px;
						设置上下内边距分别为10 30，左右内边距为20
				4. padding:10px 20px 30px 40px;
						设置上右下左四个方向的内边距
	3. 单方向内边距的设置
			1. 属性 ：
					padding-top : 内容与元素顶部边框之间的距离
					padding-right : 内容与元素右边框之间的距离
					padding-bottom: 内容与元素底部边框之间的距离
					padding-left : 内容与左边框之间的距离
			2. 取值为像素值
	4. 默认带有内边距的元素
			ol ul input td...
	5. 清除浏览器默认内外边距
			body,h1,h2,h3,h4,h5,h6,p,ul,ol,input{
				margin:0;
				padding:0;
			}
3. 设置盒模型的计算方式
		et :
			div{
				width: 200px;
				height: 200px;
				border: 10px solid red;
				margin: 10px;
				padding: 10px;
			}
			div在文档中实际占据的尺寸为 ：260 * 260
		1. 属性 ：box-sizing
			 作用 ：指定盒模型的计算方式
			 取值 ：
					1. content-box : 默认值
							元素的width height属性只用来规定内容的尺寸
							，如果元素设置内外边距和边框，最终在文档中
							占据的尺寸由各种值相加得到
					2. border-box :
							元素的width height属性，规定的是包含边框，
							内边距和内容在内的尺寸
							et :
									div{
										box-sizing: border-box;
										width: 200px;
										height: 200px;
										border: 10px solid red;
										margin: 10px;
										padding: 10px;
									}
									div在文档中实际占据的尺寸为 ：220 * 220
4. 元素的显示设置
	1. 设置元素的可见性
			属性 ：visibility
			取值 ：
				1. visible 默认值，元素可见
				2. hidden  设置元素隐藏,元素在文档中仍然占位
	2. 转换元素类型
			属性 ：display
			取值 ：
				1. block : 转换为块元素
				2. inline : 转换为行内元素
				3. inline-block : 转换行内块元素
			特殊取值 ：
				4. none : 实现元素隐藏,元素在文档中不占位，其他元素
						会相应的移动
			实现元素隐藏与显示 ：
				display:none; 隐藏
				display:block;显示
				作业 ：
					实现下拉菜单
					1. 使用列表或其他结构完成下拉菜单
							et :		 北京 
								菜单 ：深圳
					2. 当鼠标悬停在 北京 时，显示下拉菜单
							鼠标移出时，隐藏下拉菜单
5. 背景相关的属性
	1. background-color
		设置背景颜色，取颜色值
		注意 ：
			1. 所有元素默认的背景颜色都是透明色，新建窗口的
					的白色不是body的背景色，是浏览器渲染的结果
			2. 背景颜色是从元素的边框位置开始绘制的，如果元素
					添加内边距，都会被渲染成相应的背景颜色
	2. 背景图片
		1. 设置背景图片
				属性 ：background-image
				取值 ：url()
				注意 ：
					1. 背景图片的尺寸如果大于元素尺寸，图片仍然按照
					原始尺寸显示，超出元素的部分不可见
					2. 背景图片的尺寸小于元素尺寸，浏览器会自动对
					背景图片重复平铺，直到铺满元素
					3. 背景图片与背景颜色一样，不影响元素正常内容的显示
		2. 设置背景图片的重复方式
				图片尺寸不够时，浏览器会自动沿水平和垂直两个方向
				对图片进行重复平铺，直到铺满元素
				属性 ：background-repeat
				取值 ：
					1. repeat : 默认值，沿水平和垂直方向平铺
					2. repeat-x : 沿水平方向平铺
					3. repeat-y : 沿垂直方向平铺
					4. no-repeat : 设置背景图片不重复平铺
		3. 设置背景图片的位置
				1. 属性 ：background-position
				2. 取值 ：x y
					1. 取像素值 ：
						x : 表示背景图片水平方向的偏移距离
								正值表示图片向右偏移
								负值表示图片向左偏移
						y : 背景图片垂直方向的偏移距离
								正值表示图片向下偏移
								负值表示图片向上偏移
						注意 ：结合“精灵图”实现元素背景图片调整，
									 这种技术叫“精灵技术”
					2. 取百分比
							参照元素尺寸计算水平和垂直偏移距离
							1. 0% 0%
									背景图片显示在元素左上角
							2. 50% 50%
									背景图片显示在元素中间
							3. 100% 100%
									背景图片显示在右下角
					3. 方位值确定背景图片的位置
							x : left / center / right
							y : top / center / bottom
							如果某一个方向缺失，默认为center
		4. 设置背景图片的大小
				1. 属性 ：background-size
				2. 取值 ：x y
						x y 分别表示背景图片的宽和高
						1. 像素值
						2. 百分比 ：参照元素宽高尺寸计算背景图片大小
						3. cover : 表示将图片等比放大至完全覆盖元素
								超出部分不可见
						4. contain : 表示将图片等比拉伸至刚好被元素容纳，
								不能超出元素尺寸，可能会造成背景图片无法
								完全覆盖元素的效果
		5. 背景属性简写 
				1. 属性 ：background
				2. 取值 ：color url() repeat position
				注意 ：
					1. 背景属性按照一定顺序设置
					2. background-size单独设置
					3. 可以省略属性值，单独设置颜色 或者背景图片
							et:
								background:red;
								background:url();
6. 文本相关的属性
	1. 字体相关的属性
		1. 字体大小
			属性 ：font-size
			取值 ：像素值或em  1em = 16px
		2. 字体粗细程度
			属性 ：font-weight
			取值 ：
				1. 关键字 light / normal(正常) / bold（加粗）
				2. 整百数值 100-900,数值越大，字体越粗
						100（lighter）- 400 (normal) - 700(bold) - 900(bolder)
		3. 字体名称
			1. 属性 ：font-family
			2. 取值 ：字体名称
				 注意 ：
					1. 如果字体名称是中文或者由多个英文单词组成，
							需要使用引号引起来
							et :
								font-family : "微软雅黑";
								font-family : "Microsoft YaHei";
								font-family : Arial;
								font-familt : serif;
					2. 同时指定多个字体名称，之间使用英文逗号间隔
							当浏览器不支持第一种字体时，会按照顺序依次
							以后面指定字体名称显示
							et :
								font-family : "黑体","微软雅黑","宋体";	
		4. 字体样式（是否采用斜体）
			1. 属性 : font-style
			2. 取值 ：
						1. normal 正常显示
						2. italic 斜体显示
						3. oblique 倾斜显示
						注意 ：oblique可以将字体倾斜一定角度，默认
						倾斜效果与italic斜体没有差别
		5. 字体属性简写 
			1. 属性 ：font
			2. 取值 ：style weight size family;
				注意 ：
					1. 同时设置四个属性值时，参照给定顺序书写
					2. font-size和font-family是必填项，不能省略
	2. 文本相关的属性
		1. 文本颜色
			1. 属性 ：color
			2. 取值 ：颜色值
		2. 文本装饰线 
			1. 属性 ：text-decoration
			2. 取值 ：
					1. underline : 下划线
					2. overline : 上划线
					3. line-through ：删除线
					4. none : 取消文本装饰线
		3. 文本水平对齐方式
			1. 属性 ：text-align
			2. 取值 ：
					1. left(默认值) / center / right
					2. justify 两端对齐
		4. 设置行高
			行高指的是一行文本所占的高度
			1. 属性 ：line-height
			2. 取值 ：像素值或em
			用法 ：
				1. 设置行高与元素高度相同，实现一行文本的垂直居中
				2. line-height > height ,文本会下移
				3. line-height < height ,文本会上移
			注意 ：
				文本内容在当前行中始终是垂直居中的
			特殊取值 ：
				取无单位的数值，表示当前字体大小的倍数，由此计算
				行高
				et :
					p{
						font-size:20px;
						line-height:2;  (当前行高为字体大小的2倍，40px)
					}
7. 表格相关的属性
	1. 基础样式是通用的
	2. 独有的CSS属性 ：
		1. 边框合并
				属性 ：border-collapse
				取值 ：
					1. seperate : 默认值，单元格边框与表格边框相分离
					2. collapse : 设置表格边框与单元格边框合并
				注意 ：
					1. td 不支持margin
					2. border-collapse只能在table中使用
		2. 设置边框边距
				属性 ： border-spacing
				取值 ： h-value v-value
					h-value : 水平方向边框之间的距离
					v-value : 垂直方向边框之间的距离
					两个值之间使用空格隔开
				注意 ：
					边框边距只能在边框分离状态下设置，合并时无法使用

